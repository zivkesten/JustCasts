apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion rootProject.compileSdkVersion
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    defaultConfig {
        applicationId "com.zk.justcasts"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn",
                "-Xopt-in=kotlin.OptIn"
        ]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    viewBinding {
        enabled = true
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            buildConfigField "String", "BASE_URL", "\"https://listen-api.listennotes.com/api/v2/\""
            buildConfigField "String", "API_KEY", "\"d4048898e8f34fdc90d72d53475d1bd7\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://listen-api.listennotes.com/api/v2/\""
            buildConfigField "String", "API_KEY", "\"d4048898e8f34fdc90d72d53475d1bd7\""
        }
    }
    namespace 'com.zk.justcasts'
    buildFeatures {
        buildConfig true
    }
}

configurations.all {
    resolutionStrategy {
        force 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
        force 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
        // Add other lifecycle components here if necessary
    }
}


dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'androidx.core:core-ktx:1.3.0'

    //UI
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$coordinatorlayoutVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationFragmentVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationUIVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacyVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidXLifecycleExtensionVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$androidXLifecycleViewmodelVersion"
    implementation "com.google.android.material:material:$materialVersion"

    //Koin
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:$koinVersion"



    //Networking
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$logInterceptorVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.picasso:picasso:$picassoVersion"
    implementation("io.coil-kt:coil:0.11.0")

    //Database
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"// For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$roomVersion"

    //<--Testing-->

    //Junit
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"

    //Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    //Core
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "androidx.test:core:$androidXTestCoreVersion"
    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"

    //Kotlin Tests
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlinJunit"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinTestVersion"
    testImplementation "com.jraska.livedata:testing-ktx:$liveDataTestVersion"

    //Mockito
    testImplementation "org.mockito:mockito-inline:$mockitoInlineVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitokotlinVersion"

    //truth - assertion library
    testImplementation "com.google.truth:truth:$truthVersion"

    //Roboelectric
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

}
